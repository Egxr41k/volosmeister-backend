services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - backend

  frontend:
    container_name: frontend
    build:
      context: ../volosmeister-frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    networks:
      - backend

  backend:
    container_name: backend
    build: .
    depends_on:
      - postgres
      - minio
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    networks:
      - backend

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  minio:
    container_name: minio
    image: minio/minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - '9000:${MINIO_PORT}'
      - '9001:${MINIO_CONSOLE_PORT}'
    volumes:
      - minio_data:/data
    networks:
      - backend

  minio-client:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - backend
    entrypoint: >
      sh -c "
        sleep 5 &&
        mc alias set local http://minio:${MINIO_PORT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY} &&
        mc mb -p local/${MINIO_BUCKET_NAME} || true &&
        mc anonymous set public local/${MINIO_BUCKET_NAME}
      "

volumes:
  postgres_data:
  minio_data:

networks:
  backend:
